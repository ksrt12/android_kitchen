################################################################################
#
#          Copyright (c) 2011 - dsixda (dislam@rocketmail.com)
#
#                         (c) 2015, KSRT12
#
#                     (с) 2015, Казаков степан
#
# Android Kitchen бесплатна на 100%. Этот файл сценария предназначен только для
# персонального использования и/или для образовательных целей. Он не может быть
# использован для денежной выгоды или любой другой цели без разрешения разработчика.
#
################################################################################

#
# Этот скрипт имеет два опциональных аргумента:
# $1 = "for_build"
# $2 = да/нет(игнорировать строки)-зависит от $1 присутствия,по умолчанию=Да
#


if [ "$1" != "for_build" ]
then
  clear
  echo

  if [ -d WORKING_* ]
  then
    echo Найдена рабочая папка
  else
    echo Ни одной рабочей папки не найдено!
    exit 1
  fi
fi

if [ `uname | grep CYGWIN` ]
then
  zipalign_file=zipalign.exe

elif [ `uname | grep Linux` ]
then
  zipalign_file=zipalign

elif [ `sw_vers | grep -o Mac` ]
then
  zipalign_file=zipalign.mac

else
  echo Ошибка: Операционная система не обнаружена, не могут использовать zipalign
  exit 1
fi


return_val=0

if [ "$1" == "for_build" ]
then

  if [ "$2" == "no" ]
  then
    echo
    echo -n "Хотите оптимизировать APK файлы и сжать их(y/n)? (по умолчанию: y): "
    read do_zipalign
  fi    

else
  clear

  echo
  echo "---------------------------------------------------------------"
  echo  
  echo "Zipalign это процедура, которая позволит оптимизировать все *.apk"
  echo "файлы в рабочей папке для лучшего использования памяти."
  echo
  echo "NOTE: The option to zipalign all *.apk files will also be"
  echo "provided when you build your ROM, so it is not necessary to"
  echo "zipalign now."
  echo 
  echo "---------------------------------------------------------------"
  echo

  echo -n "Продолжать сжатие (y/n)? (по умолчанию: y): "
  read do_zipalign
fi


if [ "$do_zipalign" == "n" ]
then
  exit 0
fi


echo
cd WORKING_*

grep_cmd=`find . -type f | grep \\.apk$ | sort -f`

name1=

for filename in $grep_cmd
do

  #
  # Handle spaces in file names
  #
  if [ "`echo $filename | grep .apk$`" == "" ]
  then

    if [ "$name1" == "" ]
    then
      name1=$filename
    else
      name1="$name1 $filename"
    fi

    continue

  elif [ "$name1" != "" ]
  then

    # Replace space with underscore temporarily
    name2=$filename
    original_name="$name1 $name2"
    filename=`echo $original_name | tr ' ' '_'`
    mv "$name1 $name2" $filename
    found_space=yes
    echo "Zipaligning $original_name ..."

  else
    found_space=no
    echo "Сжатие $filename ..."
  fi

  new_file=$filename\_new
  ../tools/zipalign_files/$zipalign_file 4 $filename $new_file

  if [ -e $new_file ]
  then

    if [ "$found_space" == "yes" ]
    then
      mv -f $new_file "$name1 $name2"
      rm -f $filename

    else
      mv -f $new_file $filename 
    fi

  else

    return_val=1
    echo "Ошибка: не удалось сжать, прерывание"
    if [ `uname | grep Linux` ]
    then
      echo "Если вы используете 64-разрядную Linux, убедитесь, что у вас установлен пакет ia32-библиотеки"
    fi
    break
  fi

  name1=

done

cd ..
echo

if [ "$return_val" == "0" ]
then
  echo "Сжатие успешно завершено"
fi

exit $return_val

