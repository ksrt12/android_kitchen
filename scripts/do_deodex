################################################################################
#
#          Copyright (c) 2011 - dsixda (dislam@rocketmail.com)
#
#                         (c) 2015, KSRT12
#
#                     (с) 2015, Казаков степан
#
# Android Kitchen бесплатна на 100%.  Этот файл сценария предназначен только для
# персонального использования и/или для образовательных целей. Он не может быть
# использован для денежной выгоды или любой другой цели без разрешения разработчика.
#
################################################################################

api_version=`scripts/get_build_prop_val ro.build.version.sdk`
if [ "$api_version" == "UNKNOWN" ]
then
echo "Невозможно узнать ro.build.version.sdk,"
echo "т.к. отсутствует system/build.prop"
fi
while :
do

  clear

  echo
  echo "----------------------------------------------------------------"
  echo  
  echo "Deodexing (or de-odex'ing) will take the *.odex files in your "
  echo "ROM and convert them into classes.dex files, which will then be" 
  echo "zipped into their *.apk or framework *.jar files."
  echo ""
  echo "The intent of deodexing is to allow for theming, customization"
  echo "and portability of the ROM.  It puts your files into a state"
  echo "where they can be used for themes, icons, trackball/trackpad"
  echo "modifications, etc."
  echo
  echo "The process usually takes several minutes and does NOT require"
  echo "you to sign any of the files afterwards."
  echo
  echo "NOTE: Reversing the de-odexing process by getting back the odex"
  echo "files ('re-odexing') is not supported in the kitchen and would"
  echo "be impossible to implement."
  echo 
  echo "----------------------------------------------------------------"
  echo

  if [ ! -d WORKING_* ]
  then
    echo "Рабочая папка не найдена!"
    scripts/press_enter
    exit 0
  fi

  cd WORKING_*

  if [ ! -d system/app ]
  then
    echo "папка system/app отсутствует!"
    cd ..
    scripts/press_enter
    exit 0
  fi

  if [ ! -d system/framework ]
  then
    echo "папка system/framework отсутствует!"
    cd ..
    scripts/press_enter
    exit 0
  fi



  #
  # Look for odex files in preload folder (e.g. in Galaxy S2)
  #

  if [ -d preload/symlink/system/app ]
  then

    cd preload/symlink/system/app

    num_preload_odex=`find . | grep -c "\.odex$"`
    num_preload_apk=`find . | grep -c "\.apk$"`
    num_sysapp_odex=`find ../../../../system/app | grep -c "\.odex$"`
    num_sysfr_odex=`find ../../../../system/framework | grep -c "\.odex$"`

    # Case 1 - No odex files in preload or /system/app
    if [ $num_preload_odex == 0 ] && [ $num_sysapp_odex == 0 ] 
    then
      echo "ODEX фаилы не найдены в /preload/symlink/system/app или /system/app"
      echo

    # Case 2 - No apk/odex files in preload but odex files in /system/app
    elif [ $num_preload_odex == 0 ] && [ $num_preload_apk == 0 ] 
    then

      if [ ! -e preload_apk_list ]
      then
        echo "Внимание: APK/ODEX фаилы не найдены в /preload/symlink/system/app"
        echo
      fi

    # Case 3 - apk/odex files in preload
    elif [ $num_preload_odex -gt 0 ] || [ $num_preload_apk -gt 0 ]
    then

      echo "NOTE: $num_preload_apk APK and $num_preload_odex ODEX files are detected in /preload folder."
      echo
      echo "Temporarily move files from preload symlink folder to /system/app (y/n)?"
      echo -n "(default: y): "

      read move_files
      echo

      if [ "$move_files" == "n" ]
      then
        echo "ВНИМАНИЕ: Not moving!"
      else

        if [ $num_preload_apk -gt 0 ] 
        then
          apk_list=`ls *.apk`
          echo $apk_list > preload_apk_list
          mv -fv *.apk ../../../../system/app/
        else
          touch placeholder
        fi

        if [ $num_preload_odex -gt 0 ] 
        then
          mv -fv *.odex ../../../../system/app/
        fi

      fi

      echo
    fi

    cd ../../../..
  fi

  num_odex_fr=`find system/framework | grep -c "\.odex$"`
  num_odex_app=`find system/app | grep -c "\.odex$"`
  num_odex_priv_app=`find system/priv-app | grep -c "\.odex$"`
  num_odex_gz_app=`find system/app | grep -c "\.odex.gz$"`
  num_odex_gz_priv_app=`find system/priv-app | grep -c "\.odex.gz$"`

  echo "Найдено $num_odex_fr *.odex фаилов в /system/framework"
  echo "Найдено $num_odex_app *.odex фаилов в /system/app"
  echo "Найдено $num_odex_priv_app *.odex фаилов в /system/priv-app"
if [ $num_odex_gz_app -gt 0 ]; then
  echo "Найдено $num_odex_gz_app *.odex.gz фаилов в /system/app"
fi
if [ $num_odex_gz_priv_app -gt 0 ]; then
  echo "Найдено $num_odex_gz_priv_app *.odex.gz фаилов в /system/priv-app"
fi

  if [ -e preload/symlink/system/app/preload_apk_list ]
  then
    echo
    echo "NOTE: A set of APK files will be moved back to /preload folder"
    echo "after de-odexing is completed."
    echo 
  fi


  if [ $num_odex_fr == 0 ] && [ $num_odex_app == 0 ]
  then
    echo
    echo "Деодексация не нужна!"
    cd ..
    scripts/press_enter
    exit 0
  fi

  if [ $num_odex_fr == 0 ] && [ $num_odex_app -gt 0 ]
  then
    echo
    echo "ВНИМАНИЕ: Вы должна деодексировать папку framework, если вы"
    echo "деодексировали папку app."
    echo
  fi


  cd ..
  scripts/convert_to_unix tools/deodex_files/api_level.txt    
  api_level=`scripts/get_api_level`
  sdk=`scripts/get_build_prop_val ro.build.version.sdk`
  if [ "$api_level" != "$sdk" ]
  then
  echo $sdk > tools/deodex_files/api_level.txt
  fi
  api_level=`scripts/get_api_level`
  cd WORKING_*


  #
  # Show menu choices
  #

  echo
  echo "Enter a choice:"
  echo

  if [ $num_odex_app -gt 0 ] || [ $num_odex_fr -gt 0 ]
  then
    echo " bb  = Забекапить все папки (делать это в первую очередь!)"
  fi
  echo "  v  = Установить версию ОС (настоящий уровень API = $api_level)"
  echo
  echo "       ВАЖНО: Устанавливайте корректный уровень API"
  echo

  if [ $num_odex_gz_app -gt 0 ] || [ $num_odex_gz_priv_app -gt 0 ]
  then
    echo "  g  = Распаковать *.odex.gz файлы в *.odex"
    do_log=gz_stat
  fi
  if [ $num_odex_fr -gt 0 ]
  then
    echo "  f  = Деодексировать /system/framework"
  fi
  if [ $num_odex_app -gt 0 ]
  then
    echo "  a  = Деодексировать /system/app"
  fi
  if [ $num_odex_priv_app -gt 0 ]
  then
    echo "  p  = Деодексировать /system/priv-app"
  fi
  if [ $num_odex_app -gt 0 ] && [ $num_odex_fr -gt 0 ] || [ $num_odex_priv_app -gt 0 ]
  then
    echo "  b  = Деодексировать все папки (рекомендуется)"
  fi
  echo "  s  = Деодексировать a single file"
  echo "  x  = Выход"
  echo
  echo " Введите номер команды: "

  read enterChoice

  list1=( app )
  list2=( framework )
  list4=( priv-app )
if [ $num_odex_priv_app -gt 0 ]
then
  list3=( framework app priv-app )
else
  list3=( framework app )
fi

  if [ "$enterChoice" == "g" ] 
  then
    cd ..
    scripts/odex_gz2odex
    continue
  elif [ "$enterChoice" == "a" ]
  then
    dir_list=app
  elif [ "$enterChoice" == "v" ]
  then
    cd ..
    scripts/change_api_level
    continue
  elif [ "$enterChoice" == "f" ] 
  then
    dir_list=framework
  elif [ "$enterChoice" == "p" ] 
  then
    dir_list=priv-app
  elif [ "$enterChoice" == "b" ] 
  then
if [ $num_odex_priv_app -gt 0 ]
then
    dir_list="framework app priv-app"
else
    dir_list="framework app"
fi
  elif [ "$enterChoice" == "s" ]
  then
    cd ..
    scripts/choose_single_deodex
    continue
  elif [ "$enterChoice" == "bb" ]
  then

    #
    # Backup
    #
if [ $num_odex_priv_app -gt 0 ]
then
    folder_list=( framework app priv-app )
else
    folder_list=( framework app )
fi
    date_str=`date '+%m%d%y_%H%M%S'`

    for f in ${folder_list[@]}
    do

      backup_folder="old_`echo -n $f`_$date_str"
      cd system/$f

      echo
      echo "Создание резервной папки $backup_folder отдельно от рабочей папки ..."
      mkdir ../../../$backup_folder
      cp  -r * ../../../$backup_folder/
      echo "Резервная копия $f создано."

      cd ../..
    done

    cd ..
    scripts/press_enter
    continue

  elif [ "$enterChoice" == "x" ]
  then
    cd ..
    exit 0
  else
    cd ..
    continue
  fi


  sgs2_fix=no

  # Add java.awt.jar to framework folder (fix Email.apk and MobilePrint.apk)
  # - Thanks to xeudoxus
  if [ `echo $dir_list | grep -c app` -gt 0 ] && \
      [ -e system/framework/com.samsung.device.jar ] && [ ! -e system/framework/java.awt.jar ]
  then
    if [ -e system/app/Email.apk ] || [ -e system/app/MobilePrint.apk ] 
    then
      sgs2_fix=yes
      cp -f ../tools/samsung_files/java.awt.jar system/framework/
    fi
  fi

  cd ..
  scripts/do_deodex_folder "$dir_list" $do_log

  cd WORKING_*

  if [ "$sgs2_fix" == "yes" ]
  then
    rm -f system/framework/java.awt.jar
  fi

  num_priv_odex_app=`find system/priv-app | grep -c "\.odex$"`
  num_priv_apk_app=`find system/priv-app | grep -c "\.apk$"`
  num_odex_app=`find system/app | grep -c "\.odex$"`
  num_apk_app=`find system/app | grep -c "\.apk$"`
  num_odex_fr=`find system/framework | grep -c "\.odex$"`

  echo
if [ "$num_priv_odex_app" != "0" ]
then
  echo "$num_priv_odex_app *.odex файлов удалено в system/priv-app"
fi
  echo "$num_odex_app *.odex файлов удалено в system/app"
  echo "$num_odex_fr *.odex файлов удалено в system/framework"

  if [ $num_odex_fr == 0 ] && [ $num_odex_app -gt 0 ]
  then
    echo
    echo "ВНИМАНИЕ: Вы должна деодексировать папку framework, если вы"
    echo "деодексировали папку app(priv-app)."
  fi

  # For some Samsung Exynos Galaxy S2 / Note ROMs
  if [ $num_odex_app == 0 ] && [ $num_apk_app != 0 ] && [ -e preload/symlink/system/app/preload_apk_list ]
  then
    echo
    echo "Moving back all *.apk originally found in /preload/symlink/system/app ..."
    echo

    for apk in `cat preload/symlink/system/app/preload_apk_list`
    do
      mv system/app/$apk preload/symlink/system/app/
    done

    rm -f preload/symlink/system/app/preload_apk_list

    echo
  fi


  cd ..
  scripts/press_enter

  if [ $num_odex_fr == 0 ] && [ $num_odex_app == 0 ]
  then
    exit 0
  fi

done
