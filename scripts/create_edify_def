################################################################################
#
#          Copyright (c) 2011 - dsixda (dislam@rocketmail.com)
#
#                         (c) 2015, KSRT12
#
#                     (с) 2015, Казаков степан
#
# Android Kitchen бесплатна на 100%. Этот файл сценария предназначен только для
# персонального использования и/или для образовательных целей. Он не может быть
# использован для денежной выгоды или любой другой цели без разрешения разработчика.
#
################################################################################

device=`scripts/get_variant_or_device_name`
if [ "$device" == "hwu8950" ] || [ "$device" == "hwu8950-1" ] || [ "$device" == "hwu8950D" ] || [ "$device" == "u8950D" ] || [ "$device" == "g600" ] || [ "$device" == "u8950-1" ]
then
device=u8950
fi
if [ ! -e "tools/edify_defs/$device" ] && [ "$device" != "UNKNOWN" ]
then

  cd WORKING_*

  out=(`grep ^mount META-INF/com/google/android/updater-script | grep block`)
  if [ "$out" == "" ]
  then
    out=(`grep "^run_program(\"/sbin/mount\"" META-INF/com/google/android/updater-script | grep block`)
  fi

  if [ "$out" != "" ]
  then
    echo
    echo "======================================================================"
    echo
    echo "WARNING! Device '$device' is not defined under tools/edify_defs"
    echo
    echo "The kitchen will now try to create a very basic definition file based"
    echo "on the mount points specified in your updater-script; however, it may"
    echo "not be 100% accurate ..."

    device=../tools/edify_defs/$device

    echo "change_mnt=yes" >> $device
    echo >> $device

    mnt_name_list=( system cache data sdcard )
    var_name_list=( sys_mnt cache_mnt data_mnt sdcard_mnt )
    got_block_id=0
    found_param1=0

    for item in ${out[@]}
    do
      
      # Look for ext3/ext4 etc.
      if [ "`echo $item | grep -c \"mount(\\\"ext\"`" != 0 ] && [ $found_param1 == 0 ]
      then
        param1=`echo $item | sed -e 's/mount(\"\(.*\)\",/\1/g'`
        echo >> $device
        echo "param1=$param1" >> $device 
        echo "param2=EMMC" >> $device 
        echo >> $device
        found_param1=1

        echo "param1_sdcard=vfat" >> $device
        echo "param2_sdcard=MTD" >> $device
        echo >> $device

      # Look for /dev/block/mmcblock etc.
      elif [ "`echo $item | grep -c block`" != 0 ]
      then
        got_block_id=1
        slash=\\\\
        block_id=`echo $item | sed -e 's/\"//g' -e 's/,//g' -e 's/\(\/\)/'$slash'\1/g'`


      elif [ $got_block_id == 1 ]
      then

        # Look for mount name
        if [ "`echo $item | grep -c /`" == "1" ]
        then
          for (( i = 0 ; i < ${#mnt_name_list[@]} ; i++ ))
          do
            mnt=${mnt_name_list[$i]}
            
            if [ "`echo $item | grep $mnt`" != "" ]
            then
              var=${var_name_list[$i]}
              echo "$var=$block_id" >> $device 
              got_block_id=0
            fi                  
          done
        fi            
      fi

    done

    # Default ext type
    if [ $found_param1 == 0 ]
    then
      echo >> $device
      echo "param1=ext4" >> $device
      echo "param2=EMMC" >> $device 
      echo >> $device

      echo "param1_sdcard=vfat" >> $device
      echo "param2_sdcard=MTD" >> $device
      echo >> $device      
    fi


    # Look for boot image mount - for the boot_mnt and fix_boot2 parameters
    boot_out=(`grep write_raw_image META-INF/com/google/android/updater-script \
        | grep boot.img | grep block`)
 
    if [ "$boot_out" != "" ]
    then
      slash=\\\\
      boot_mnt=`echo ${boot_out[1]} | sed -e 's/\"\(.*\)\"),/\1/g' -e 's/\(\/\)/'$slash'\1/g'`
      
      if [ "`echo $boot_mnt | grep block`" != "" ]
      then
        echo "boot_mnt=$boot_mnt" >> $device
        echo "fix_boot2=yes" >> $device 
      fi
    fi

    for (( i = 0 ; i < ${#var_name_list[@]} ; i++ ))
    do
      var=${var_name_list[$i]}
      if [ "`grep $var $device`" == "" ]
      then
        echo "$var=???" >> $device
      fi
    done

    echo
    echo "tools/edify_defs/$device:"
    echo "-------------------------------------------------"
    echo
    cat $device
    echo
    echo "-------------------------------------------------"
    echo
    echo
  fi

  cd ..
fi

